
# 1 "C:\Users\DPTP\Dropbox\PIC_Programozas\P16F684\wandclock\def_main.c"

# 16 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\pic16f684.h"
volatile unsigned char INDF @ 0x00;
volatile unsigned char TMR0 @ 0x01;
volatile unsigned char PCL @ 0x02;
volatile unsigned char STATUS @ 0x03;
volatile unsigned char FSR @ 0x04;
volatile unsigned char PORTA @ 0x05;
volatile unsigned char PORTC @ 0x07;
volatile unsigned char PCLATH @ 0x0A;
volatile unsigned char INTCON @ 0x0B;
volatile unsigned char PIR1 @ 0x0C;
volatile unsigned char TMR1L @ 0x0E;
volatile unsigned char TMR1H @ 0x0F;
volatile unsigned char T1CON @ 0x10;
volatile unsigned char TMR2 @ 0x11;
volatile unsigned char T2CON @ 0x12;
volatile unsigned char CCPR1L @ 0x13;
volatile unsigned char CCPR1H @ 0x14;
volatile unsigned char CCP1CON @ 0x15;
volatile unsigned char PWM1CON @ 0x16;
volatile unsigned char ECCPAS @ 0x17;
volatile unsigned char WDTCON @ 0x18;
volatile unsigned char CMCON0 @ 0x19;
volatile unsigned char CMCON1 @ 0x1A;
volatile unsigned char ADRESH @ 0x1E;
volatile unsigned char ADCON0 @ 0x1F;
volatile unsigned char OPTION @ 0x81;
volatile unsigned char TRISA @ 0x85;
volatile unsigned char TRISC @ 0x87;
volatile unsigned char PIE1 @ 0x8C;
volatile unsigned char PCON @ 0x8E;
volatile unsigned char OSCCON @ 0x8F;
volatile unsigned char OSCTUNE @ 0x90;
volatile unsigned char ANSEL @ 0x91;
volatile unsigned char PR2 @ 0x92;
volatile unsigned char WPUA @ 0x95;
volatile unsigned char IOCA @ 0x96;
volatile unsigned char VRCON @ 0x99;
volatile unsigned char EEDAT @ 0x9A;

volatile unsigned char EEDATA @ 0x9A;
volatile unsigned char EEADR @ 0x9B;

volatile unsigned char EEADRL @ 0x9B;
volatile unsigned char EECON1 @ 0x9C;
volatile unsigned char EECON2 @ 0x9D;
volatile unsigned char ADRESL @ 0x9E;
volatile unsigned char ADCON1 @ 0x9F;



volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;


volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;


volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;


volatile bit RAIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RAIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;


volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit OSFIF @ ((unsigned)&PIR1*8)+2;
volatile bit C1IF @ ((unsigned)&PIR1*8)+3;
volatile bit C2IF @ ((unsigned)&PIR1*8)+4;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit EEIF @ ((unsigned)&PIR1*8)+7;


volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit T1GE @ ((unsigned)&T1CON*8)+6;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;


volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;


volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;


volatile bit PDC0 @ ((unsigned)&PWM1CON*8)+0;
volatile bit PDC1 @ ((unsigned)&PWM1CON*8)+1;
volatile bit PDC2 @ ((unsigned)&PWM1CON*8)+2;
volatile bit PDC3 @ ((unsigned)&PWM1CON*8)+3;
volatile bit PDC4 @ ((unsigned)&PWM1CON*8)+4;
volatile bit PDC5 @ ((unsigned)&PWM1CON*8)+5;
volatile bit PDC6 @ ((unsigned)&PWM1CON*8)+6;
volatile bit PRSEN @ ((unsigned)&PWM1CON*8)+7;


volatile bit PSSBD0 @ ((unsigned)&ECCPAS*8)+0;
volatile bit PSSBD1 @ ((unsigned)&ECCPAS*8)+1;
volatile bit PSSAC0 @ ((unsigned)&ECCPAS*8)+2;
volatile bit PSSAC1 @ ((unsigned)&ECCPAS*8)+3;
volatile bit ECCPAS0 @ ((unsigned)&ECCPAS*8)+4;
volatile bit ECCPAS1 @ ((unsigned)&ECCPAS*8)+5;
volatile bit ECCPAS2 @ ((unsigned)&ECCPAS*8)+6;
volatile bit ECCPASE @ ((unsigned)&ECCPAS*8)+7;


volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
volatile bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
volatile bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
volatile bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
volatile bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;


volatile bit CM0 @ ((unsigned)&CMCON0*8)+0;
volatile bit CM1 @ ((unsigned)&CMCON0*8)+1;
volatile bit CM2 @ ((unsigned)&CMCON0*8)+2;
volatile bit CIS @ ((unsigned)&CMCON0*8)+3;
volatile bit C1INV @ ((unsigned)&CMCON0*8)+4;
volatile bit C2INV @ ((unsigned)&CMCON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CMCON0*8)+6;
volatile bit C2OUT @ ((unsigned)&CMCON0*8)+7;


volatile bit C2SYNC @ ((unsigned)&CMCON1*8)+0;
volatile bit T1GSS @ ((unsigned)&CMCON1*8)+1;


volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit VCFG @ ((unsigned)&ADCON0*8)+6;
volatile bit ADFM @ ((unsigned)&ADCON0*8)+7;


volatile bit PS0 @ ((unsigned)&OPTION*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION*8)+2;
volatile bit PSA @ ((unsigned)&OPTION*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION*8)+6;
volatile bit RAPU @ ((unsigned)&OPTION*8)+7;


volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;


volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;


volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit OSFIE @ ((unsigned)&PIE1*8)+2;
volatile bit C1IE @ ((unsigned)&PIE1*8)+3;
volatile bit C2IE @ ((unsigned)&PIE1*8)+4;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
volatile bit EEIE @ ((unsigned)&PIE1*8)+7;


volatile bit BOD @ ((unsigned)&PCON*8)+0;
volatile bit POR @ ((unsigned)&PCON*8)+1;
volatile bit SBODEN @ ((unsigned)&PCON*8)+4;
volatile bit ULPWUE @ ((unsigned)&PCON*8)+5;


volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;


volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;


volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;


volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;


volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;


volatile bit VR0 @ ((unsigned)&VRCON*8)+0;
volatile bit VR1 @ ((unsigned)&VRCON*8)+1;
volatile bit VR2 @ ((unsigned)&VRCON*8)+2;
volatile bit VR3 @ ((unsigned)&VRCON*8)+3;
volatile bit VRR @ ((unsigned)&VRCON*8)+5;
volatile bit VREN @ ((unsigned)&VRCON*8)+7;


volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;


volatile bit ADCS0 @ ((unsigned)&ADCON1*8)+4;
volatile bit ADCS1 @ ((unsigned)&ADCON1*8)+5;
volatile bit ADCS2 @ ((unsigned)&ADCON1*8)+6;


# 499 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 41 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);


# 625 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 12 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 1 "C:\Users\DPTP\Dropbox\PIC_Programozas\P16F684\wandclock\header.h"
asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x37FF & 0x3BFF & 0x3DFF & 0x3FFF & 0x3FFF & 0x3FFF & 0x3FEF & 0x3FF7 & 0x3FFC");

# 30 "C:\Users\DPTP\Dropbox\PIC_Programozas\P16F684\wandclock\def_main.c"
void init();
void delay(short int ms);
void karakter(char data);
void szamok(unsigned char data);

unsigned char timer_count = 0;




extern interrupt isr(void) {
TMR1H = 0x24;
TMR1L = 0xF4;
timer_count++;
TMR1IF = 0;


}

void main(void){
unsigned char m = 0;
short int gido = 0;

init();

while (1){


if(RA2==0){
while(!RA2);
RA0 = 1;
delay(500);
RA0 = 0;
delay(5000);
RA0 = 1;
delay(200);
RA0 = 0;
m++;
delay(100);
if(m==6) m=0;
}

if(RA1==0){
if(m == 0){
delay(1000);
karakter('-'); delay(100);
karakter('P'); delay(100);
karakter('E'); delay(100);
karakter('T'); delay(100);
karakter('I'); delay(100);
karakter('-'); delay(100);
}else if(m == 1){
delay(1000);
karakter('-'); delay(100);
karakter('F'); delay(100);
karakter('E'); delay(100);
karakter('R'); delay(100);
karakter('I'); delay(100);
karakter('-'); delay(100);
}else if(m == 2){
delay(1000);
karakter('-'); delay(100);
karakter('A'); delay(100);
karakter('N'); delay(100);
karakter('D'); delay(100);
karakter('I'); delay(100);
karakter('-'); delay(100);
}else if(m == 3){
delay(1000);
karakter('-'); delay(100);
karakter('M'); delay(100);
karakter('O'); delay(100);
karakter('N'); delay(100);
karakter('I'); delay(100);
karakter('-'); delay(100);
}else if(m == 4){
delay(1000);
karakter('-'); delay(100);
karakter('B'); delay(100);
karakter('A'); delay(100);
karakter('N'); delay(100);
karakter('D'); delay(100);
karakter('I'); delay(100);
karakter('-'); delay(100);
}else if(m == 5){
delay(1000);
karakter('-'); delay(100);
karakter('M'); delay(100);
karakter('A'); delay(100);
karakter('R'); delay(100);
karakter('X'); delay(100);
karakter('I'); delay(100);
karakter('M'); delay(100);
karakter('-'); delay(100);
}else if(m == 6){
delay(1000);
karakter('-'); delay(100);
karakter('1'); delay(100);
karakter('4'); delay(100);
karakter('-'); delay(100);
karakter('7'); delay(100);
karakter('-'); delay(100);
karakter('1'); delay(100);
karakter('1'); delay(100);
karakter('-'); delay(100);
}

}


delay(1);
}

}




void init(){

ANSEL = 0;
CMCON0 = 7;
CCP1CON = 0;
INTCON = 0;
PEIE = 1;
GIE = 1;

# 173
TRISC = 0;
TRISA = 0;
RA1 = 1;
RA2 = 1;

}


void delay(short int ms){
short int i;
for(i=0; i<=ms; i++);
}

void szamok(unsigned char data){
if(data == (char)0){
karakter('0'); delay(100);
}else if(data == (char)1){
karakter('1'); delay(100);
}else if(data == (char)2){
karakter('2'); delay(100);
}else if(data == (char)3){
karakter('3'); delay(100);
}else if(data == (char)4){
karakter('4'); delay(100);
}else if(data == (char)5){
karakter('5'); delay(100);
}else if(data == (char)6){
karakter('6'); delay(100);
}else if(data == (char)7){
karakter('7'); delay(100);
}else if(data == (char)8){
karakter('8'); delay(100);
}else if(data == (char)9){
karakter('9'); delay(100);
}
}

void karakter(char data){
switch(data){
case '-' :
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case ' ' :
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'A' :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'B' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 0;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'C' :
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'D' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'E' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'F' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'G' :
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'H' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'I' :
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'J' :
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'K' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'L' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'M' :
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'N' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'O' :
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'P' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'Q' :
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'R' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'S' :
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'T' :
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'U' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'V' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'W' :
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'X' :
RA0 = 1;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'Y' :
RA0 = 1;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case 'Z' :
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 1;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)48 :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)49 :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)50 :
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)51 :
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)52 :
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)53 :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)54 :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)55 :
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)56 :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 0;
RC2 = 1;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 1;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)57 :
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 0;
RC5 = 1;
RC2 = 0;
RC1 = 0;
RC0 = 1;
delay(80);
RA0 = 0;
RC3 = 1;
RC4 = 1;
RC5 = 1;
RC2 = 1;
RC1 = 1;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
case (char)58 :
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 1;
RC5 = 0;
RC2 = 0;
RC1 = 1;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RA0 = 0;
RC3 = 0;
RC4 = 0;
RC5 = 0;
RC2 = 0;
RC1 = 0;
RC0 = 0;
delay(80);
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
delay(80);
break;
default :
RC0 = RC1 = RC2 = RC5 = RC4 = RC3 = RA0 = 0;
}
}
